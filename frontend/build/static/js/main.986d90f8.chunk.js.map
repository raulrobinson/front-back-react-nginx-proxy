{"version":3,"sources":["config/index.js","util/rest.js","services/index.js","App.js","index.js"],"names":["services","host","process","REACT_APP_SERVICES_HOST","url","a","fetch","response","json","data","opts","method","headers","body","JSON","stringify","get","post","entity","rest","config","id","obj","searchEntities","getById","createEntity","App","useState","newEntity","values","setValues","isCeateModalVisible","setCreateModalVisible","isLoading","setLoading","isSaving","setSaving","handleInputChange","e","target","name","value","type","checked","preventDefault","alert","entities","payload","parse","className","htmlFor","onChange","onClick","handleSubmit","style","marginTop","role","rows","width","length","Object","getOwnPropertyNames","map","index","key","scope","colNames","item","rowIndex","n","colIndex","getDataRows","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.986d90f8.chunk.js","sourcesContent":["export default {\r\n  services: {\r\n    host: process.env.REACT_APP_SERVICES_HOST\r\n  }\r\n}","async function get( url ) {\r\n\r\n  const response = await fetch( url )\r\n  const json = await response.json()\r\n\r\n  return json\r\n\r\n}\r\n\r\nasync function post( url, data ) {\r\n  const opts = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify( data )\r\n  }\r\n\r\n  const response = await fetch( url, opts )\r\n  const json = await response.json()\r\n\r\n  return json\r\n\r\n}\r\n\r\nexport default {\r\n  get,\r\n  post\r\n}","import config from '../config'\r\nimport rest from '../util/rest' \r\n\r\nasync function searchEntities( entity ) {\r\n  return await rest.get( `${config.services.host}/${entity}` )\r\n}\r\n\r\nasync function getById( entity, id ) {\r\n  return await rest.get( `${config.services.host}/${entity}/${id}` )\r\n}\r\n\r\nasync function createEntity( entity, obj ) {\r\n  return await rest.post( `${config.services.host}/${entity}`, obj )\r\n}\r\n\r\nexport default {\r\n  searchEntities,\r\n  getById,\r\n  createEntity\r\n}","import 'bootstrap/dist/css/bootstrap.css'\r\nimport React, { useState } from 'react'\r\nimport services from './services'\r\n\r\nfunction App() {\r\n  const [values, setValues] = useState({ entity: '', data: [], newEntity: '' })\r\n  const [isCeateModalVisible, setCreateModalVisible] = useState( false )\r\n  const [isLoading, setLoading] = useState( false )\r\n  const [isSaving, setSaving] = useState( false )\r\n\r\n  function handleInputChange( e ) {\r\n    let {name, value} = e.target\r\n    if( e.target.type === 'checkbox' ) {\r\n      value = e.target.checked\r\n    }\r\n    \r\n    setValues({...values, [name]: value})\r\n  }\r\n\r\n  async function handleSubmit( e ) {\r\n    e.preventDefault()\r\n\r\n    if( !values.entity ) {\r\n      alert( 'Please enter an Entity name' )\r\n      return \r\n    }\r\n\r\n    setLoading(true)\r\n    const entities = await services.searchEntities( values.entity )\r\n    setLoading(false)\r\n\r\n    setValues({...values, data: entities.payload})\r\n  } \r\n\r\n  function getDataRows() {\r\n    \r\n    if( values.data && values.data.length ) {\r\n      let colNames = Object.getOwnPropertyNames( values.data[0] )\r\n\r\n      let rows = values.data.map( (item, rowIndex) => {\r\n        let row = (\r\n          <tr key={`row-${rowIndex}`}>\r\n            { colNames.map( (n, colIndex) => <td key={`row-${rowIndex}--col-${colIndex}`}>{item[n]}</td> )}\r\n          </tr>\r\n        )\r\n        return row\r\n      })\r\n\r\n      return rows\r\n    }\r\n  }\r\n\r\n  function handleCreateNewClick() {\r\n    setCreateModalVisible( true )\r\n  }\r\n\r\n  async function handleCreateNewSaveClick() {\r\n    if( !values.entity ) {\r\n      alert( 'Please enter an Entity name' )\r\n      return \r\n    }\r\n\r\n    setSaving(true)\r\n    await services.createEntity( values.entity, JSON.parse( values.newEntity ) )\r\n    setSaving(false)\r\n\r\n    setLoading(true)\r\n    const entities = await services.searchEntities( values.entity )\r\n    setLoading(false)\r\n    setValues({...values, data: entities.payload})\r\n\r\n  }\r\n\r\n  function handleCreateNewCancelClick() {\r\n    setCreateModalVisible( false )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <h2>Ronin App Template</h2>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Enter an entity:</label>\r\n            <input type=\"textbox\" className=\"form-control\" onChange={ handleInputChange } value={ values.entity } name=\"entity\"/>\r\n          </div>\r\n          <button type=\"submit\" onClick={ e => handleSubmit(e) } className=\"btn btn-primary\">Submit</button>\r\n          <span style={{ \"display\": \"inline-block\", \"marginLeft\": \"5px\", \"marginRight\": \"5px\"}}></span>\r\n          <button type=\"button\" onClick={ handleCreateNewClick } className=\"btn btn-secondary\">Create New Record</button>\r\n        </form>\r\n\r\n        { isCeateModalVisible\r\n          ? (\r\n            <div style={{marginTop: \"25px\"}} className=\"alert alert-success\" role=\"alert\">\r\n              <h4 className=\"alert-heading\">Create New Record</h4>\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleFormControlTextarea1\">Enter JSON below:</label>\r\n                  <textarea className=\"form-control\" rows=\"8\" onChange={ handleInputChange } value={ values.newEntity } name=\"newEntity\"></textarea>\r\n                </div>\r\n                <div style={{width: \"100%\", \"paddingBottom\": \"40px\"}}>\r\n                  <div className=\"float-left\">\r\n                    { isSaving ? <span>Saving...</span> : ''}\r\n                  </div>\r\n                  <div className=\"float-right\">\r\n                    <button type=\"button\" onClick={ handleCreateNewSaveClick } className=\"btn btn-primary\">Save</button>\r\n                    <span style={{ \"display\": \"inline-block\", \"marginLeft\": \"5px\", \"marginRight\": \"5px\"}}></span>\r\n                    <button type=\"button\" onClick={ handleCreateNewCancelClick } className=\"btn btn-secondary\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )\r\n        }\r\n\r\n        <div style={{marginTop: \"75px\"}}>\r\n          <h3>Results: {values.entity}</h3>\r\n          <div>\r\n            { values.data.length\r\n              ? (\r\n                <table className=\"table table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      { Object.getOwnPropertyNames( values.data[0] ).map( (name, index) => <th key={`${index}-${name}`} scope=\"col\">{name}</th>) }\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    { getDataRows() }\r\n                  </tbody>\r\n                </table>\r\n              ) : ( \r\n                isLoading\r\n                  ? <span>Loading...</span>\r\n                  : <span>No results</span>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}